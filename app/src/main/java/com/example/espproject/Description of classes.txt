the main components of the app are the five main pages (activities): the MainActivity as the login page,
and 4 pages for the 4 icons on the bottom navigation bar
First icon (shopping cart) - ShoppingListActivity
Second icon (recipe) - RecipeActivity
Third icon (carrot) - PantryActivity
Fourth icon (person) - ProfileActivity
each page can have subpages (fragments) and dialogs, etc.
note that these names (the headings) refer to the java files with the corresponding name

to do:
define how and where data gets passed between UI components and implement relevant callback interfaces
finish adding model classes


MainActivity:
this is the first page that will open up when the user opens the app
essentially the login page
corresponding layout file is activity_main.xml



RecipeActivity:
page displays the RecipeMenuFragment, SearchFragment, RecipeListFragment and RecipeFragment
the user will be navigated here after logging in
the user can access their recipes, ingredients from here, and can search for new recipes
'Search' button navigates user to the search fragment
corresponding layout file is activity_recipe.xml


RecipeMenuFragment:
displays buttons
'My Recipes' navigates user to RecipeFragment
'Use Pantry Ingredients' navigates user to RecipeFragment
'Search' navigates user to SearchFragment
corresponding layout file is fragment_recipe_menu.xml


SearchFragment:
user can find new recipes here
clicking a category or searching will navigate to RecipeFragment (categories are buttons)
scrollview displaying recipes --> NewRecipeAdapter (need adapter class and layout file)
corresponding layout file is fragment_search.xml


RecipeListFragment:
user can see the result of the search here (list of recipes)
this page can also display the list of the user's own recipes
RecipeAdapter (adapter class and layout file needed)
corresponding layout file is fragment_recipe_list.xml


RecipeFragment:
this page displays the details of one specific recipe
user will be navigated here when selecting a recipe in SearchFragment or RecipeListFragment
corresponding layout file is fragment_recipe.xml


NewRecipeAdapter:
adapter class for displaying potential new recipes in SearchFragment
corresponding layout file is new_recipe_item.xml


RecipeAdapter:
adapter class for displaying recipes in RecipeFragment
corresponding layout file is recipe_item.xml




PantryActivity:
the second icon on the bottom navigation bar
check if user is in pantry
if not: display NoPantryFragment
if yes: display PantryFragment
corresponding layout file is activity_pantry.xml


NoPantryFragment:
user is navigated here if not in a pantry
enter pantry name to join a pantry or open dialog (CreatePantryDialog) that asks for name (has to be unique)
corresponding layout file is fragment_no_pantry.xml

PantryFragment:
displays ingredients (food) in the pantry
user can add or remove ingredients to/from the pantry
3 pantry components: fridge, cupboard, freezer - each a separate list
generic list for each PantryComponent (PantryItemsAdapter, pantry_item.xml)
'Users' button at the top that displays a dialog (PantryUsersDialog) showing the users in the pantry
'Add Ingredient' button opens dialog (AddIngredientDialog) to add a new ingredient to pantry
corresponding layout file is fragment_pantry.xml

CreatePantryDialog:
this dialog opens from NoPantryFragment when the user wants to create a pantry
textBox to enter pantry name - has to be unique
button 'Go To Pantry' navigates to PantryFragment
corresponding layout file is dialog_create_pantry.xml

PantryUsersDialog:
opens from PantryFragment to display users in pantry
corresponding layout file is dialog_pantry_users.xml

AddIngredientsDialog:
opens from PantryFragment
fields to input the details of the new ingredient
corresponding layout file is dialog_add_ingredients.xml



ShoppingListActivity:
third icon on the bottom navigation bar
page displays ShoppingListFragment and SelectedItemFragment
opens ShoppingListFragment by default
corresponding layout file is activity_shopping_list.xml


ShoppingListFragment:
displays the user's shopping list (adapter class and layout file needed)
can add or remove items to/from the list
'Finish shop' navigates user to the SelectedItemsFragment
corresponding layout file is fragment_shopping_list.xml


SelectedItemsFragment:
displays the items in the shopping list
page opens when the shop is finished - to add selected items to the pantry
all are selected by default, can unselect items
goes back to updated shopping list (removes the items that were added to the pantry)
corresponding layout file is fragment_selected_items.xml





ProfileActivity:
(how to set preferences and allergies is still unclear)
display achievements (?)
set user preferences here
set allergies here
notifications with toggle (for all notifications)
log out
corresponding layout file is activity_profile.xml


Questions
- setting user preferences and allergies is still unclear
- how is score calculated?
- is the leaderboard displayed anywhere?